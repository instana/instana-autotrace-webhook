apiVersion: apps/v1
kind: Deployment
metadata:
  name: instana-autotrace-webhook
  labels:
{{- include "instana-autotrace-webhook.commonLabels" . | nindent 4 }}
{{- if .Values.webhook.deployment.additionalLabels }}
{{ toYaml .Values.webhook.deployment.additionalLabels | indent 4 }}
{{- end }}
{{- if .Values.webhook.deployment.additionalAnnotations }}
  annotations:
{{ toYaml .Values.webhook.deployment.additionalAnnotations | indent 4 }}
{{- end }}
spec:
  replicas: {{ .Values.webhook.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/instance: {{ .Release.Name }}
  strategy:
    # Since we bind to the host network, a rolling update on small clusters may deadlock,
    # with new pods not able to start because the network port is taken, and old pods remaining
    # around until the new ones are up
    type: Recreate
  template:
    metadata:
      name: instana-autotrace-webhook
      labels:
{{- if .Values.webhook.pod.additionalLabels }}
{{ toYaml .Values.webhook.pod.additionalLabels | indent 8 }}
{{- end }}
{{- include "instana-autotrace-webhook.commonLabels" . | nindent 8 }}
        instana-autotrace-ignore: "true"
{{- if .Values.webhook.pod.additionalAnnotations }}
      annotations:
{{ toYaml .Values.webhook.pod.additionalAnnotations | indent 8 }}
{{- end }}
    spec:
{{/*
  Host Network access requires RBAC on OpenShift, as we need to grant the
  "hostnetwork" security context constraint, so we just jump the gun and
  add RBAC as a dependency
*/}}
{{- if or .Values.rbac.enabled .Values.openshift.enabled }}
      serviceAccountName: {{ .Release.Name }}
{{- else }}
      serviceAccountName: default
{{- end }}
      securityContext:
{{- if .Values.webhook.pod.securityContext }}
{{ toYaml .Values.webhook.pod.securityContext | indent 8 }}
{{- end }}
      imagePullSecrets:
{{ toYaml .Values.webhook.imagePullSecrets | indent 8 }}
      containers:
      - name: instana-autotrace-webhook
        image: {{ required "You must provide a value for 'webhook.image'" .Values.webhook.image | quote }}
        imagePullPolicy: {{ .Values.webhook.imagePullPolicy }}
        securityContext:
          privileged: false
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - all
        resources:
{{ toYaml .Values.webhook.pod.resources | indent 10 }}
        env:
        - name: WEBHOOK_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: WEBHOOK_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SERVER_PORT
          value: {{ .Values.webhook.pod.port | quote }}
        - name: INSTANA_AUTOTRACE_WEBHOOK_VERSION
          value: {{ .Chart.AppVersion }}
        - name: INSTANA_AUTOTRACE_IGNORED_NAMESPACES
          value: {{ join "," (concat .Values.autotrace.exclude.builtin_namespaces .Values.autotrace.exclude.namespaces)}}
{{- if .Values.autotrace.instrumentation.securityContext }}
        - name: INSTANA_INSTRUMENTATION_INIT_CONTAINER_SECURITY_CONTEXT
{{- if .Values.openshift.enabled }}
          value: {{ toJson (unset (.Values.autotrace.instrumentation.securityContext | default "{}") "runAsUser") | quote }}
{{- else }}
          value: {{ toJson .Values.autotrace.instrumentation.securityContext | default "{}" | quote }}
{{- end }}
{{- end }}
        - name: INSTANA_INSTRUMENTATION_INIT_CONTAINER_IMAGE
          value: {{ .Values.autotrace.instrumentation.image | quote }}
        - name: INSTANA_INSTRUMENTATION_INIT_CONTAINER_IMAGE_PULL_POLICY
          value: {{ .Values.autotrace.instrumentation.imagePullPolicy | quote }}
        - name: INSTANA_AUTOTRACE_OPT_IN
          value: {{ .Values.autotrace.opt_in | quote }}
        - name: INSTANA_AUTOTRACE_NODEJS
          value: {{ .Values.autotrace.nodejs.enabled | quote }}
        - name: INSTANA_AUTOTRACE_NETCORE
          value: {{ .Values.autotrace.netcore.enabled | quote }}
        - name: INSTANA_AUTOTRACE_RUBY
          value: {{ .Values.autotrace.ruby.enabled | quote }}
        - name: INSTANA_AUTOTRACE_PYTHON
          value: {{ .Values.autotrace.python.enabled | quote }}
        - name: INSTANA_AUTOTRACE_ACE
          value: {{ .Values.autotrace.ace.enabled | quote }}
        - name: INSTANA_AUTOTRACE_IBMMQ
          value: {{ .Values.autotrace.ibmmq.enabled | quote }}
        - name: INSTANA_AUTOTRACE_NODEJS_ESM
          value: {{ .Values.autotrace.nodejs.esm | quote }}
        - name: INSTANA_AUTOTRACE_INGRESS_NGINX
          value: {{ .Values.autotrace.ingress_nginx.enabled | quote }}
        - name: INSTANA_AUTOTRACE_INGRESS_NGINX_STATUS
          value: {{ .Values.autotrace.ingress_nginx.status_enabled | quote }}
        - name: INSTANA_AUTOTRACE_INGRESS_NGINX_STATUS_ALLOW
          value: {{ .Values.autotrace.ingress_nginx.status_allow | quote }}
        - name: INSTANA_AUTOTRACE_USE_LIB_INSTANA_INIT
          value: {{ .Values.autotrace.libinstana_init.enabled | quote }}
        - name: INSTANA_AUTOTRACE_INIT_MEMORY_LIMIT
          value: {{ .Values.autotrace.initContainer.memoryLimit | quote }}
        - name: INSTANA_AUTOTRACE_INIT_CPU_LIMIT
          value: {{ .Values.autotrace.initContainer.cpuLimit | quote }}
        - name: LOGGING_LEVEL_ROOT
{{- if .Values.webhook.debug }}
          value: DEBUG
{{- else }}
          value: INFO
{{- end }}
{{- $javaToolOptions := ""  }}
{{- if .Values.webhook.ssl.insecure }}
  {{- $javaToolOptions = "-Dcom.sun.net.ssl.checkRevocation=false " }}
{{- end }}
{{- if .Values.webhook.debug }}
  {{- $javaToolOptions = (print $javaToolOptions "-Dcom.sun.net.ssl.checkRevocation=false ") }}
{{- end }}
{{- if .Values.webhook.remoteDebug }}
  {{- $javaToolOptions = (print $javaToolOptions "-Djavax.net.debug=ssl,handshake -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005 ") }}
{{- end }}
        - name: JAVA_TOOL_OPTIONS
          value: {{ $javaToolOptions }}
        volumeMounts:
          - name: certificates
            mountPath: /app/certs
        ports:
        - containerPort: {{ .Values.webhook.pod.port }}
{{- if and (or .Values.rbac.enabled .Values.openshift.enabled) .Values.webhook.pod.hostNetwork }}
          hostPort: {{ .Values.webhook.pod.port }}
{{- end }}
{{- if .Values.webhook.remoteDebug }}
        - containerPort: 5005
{{- end }}
{{- if .Values.webhook.pod.tolerations }}
        readinessProbe:
          httpGet:
{{- if .Values.webhook.pod.hostNetwork }}
            host: 127.0.0.1
{{- end }}
            path: /actuator/health/readiness
            port: {{ .Values.webhook.pod.port }}
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 1
          failureThreshold: 3
        livenessProbe:
          httpGet:
{{- if .Values.webhook.pod.hostNetwork }}
            host: 127.0.0.1
{{- end }}
            path: /actuator/health/liveness
            port: {{ .Values.webhook.pod.port }}
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 1
          failureThreshold: 3
      tolerations:
{{- toYaml .Values.webhook.tolerations | nindent 8 }}
{{- end }}
{{- if .Values.webhook.affinity }}
      affinity:
{{- toYaml .Values.webhook.affinity | nindent 8 }}
{{- end }}
      volumes:
        - name: certificates
          secret:
            secretName: instana-autotrace-webhook-certs
