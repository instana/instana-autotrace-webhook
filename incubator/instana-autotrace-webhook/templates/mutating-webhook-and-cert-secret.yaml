{{- $altNames := list ( printf "%s.%s" (include "instana-autotrace-webhook.fullname" .) .Release.Namespace ) ( printf "%s.%s.svc" (include "instana-autotrace-webhook.fullname" .) .Release.Namespace ) -}}
{{- $ca := genCA "instana-autotrace-webhook-ca" 365 -}}
{{- $cert := genSignedCert ( include "instana-autotrace-webhook.name" . ) nil $altNames 365 $ca -}}
{{- if not .Values.openshift.enabled }}
apiVersion: v1
kind: Secret
type: kubernetes.io/tls
metadata:
  name: instana-autotrace-webhook-certs
  labels:
    {{- include "instana-autotrace-webhook.commonLabels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": "pre-install,pre-upgrade"
    "helm.sh/hook-delete-policy": "before-hook-creation"
data:
  tls.crt: {{ $cert.Cert | b64enc }}
  tls.key: {{ $cert.Key | b64enc }}
  ca.crt: {{ $ca.Cert | b64enc }}
{{- end }}
---
apiVersion: admissionregistration.k8s.io/{{ include "k8s-admission-controller-api-version" . }}
kind: MutatingWebhookConfiguration
metadata:
  name: {{ .Release.Name }}
  labels:
    {{- include "instana-autotrace-webhook.commonLabels" . | nindent 4 }}
    autotrace: instana-autotrace-webhook-impl
{{- if .Values.openshift.enabled }}
  annotations:
    service.beta.openshift.io/inject-cabundle: "true"
{{- end }}
webhooks:
- name: autotrace-webhook.instana.com
{{- if .Values.autotrace.opt_in }}
  ### Object selector for opt-in.
  objectSelector:
    matchLabels:
      "instana-autotrace": "true"
{{- end }}
  failurePolicy: {{ .Values.autotrace.failurePolicy }} # We do not want to cause any trouble in scheduling
  reinvocationPolicy: IfNeeded # If some other mutating webhook adds containers or other stuff, we wanna get another go ;-)
  matchPolicy: Equivalent
  rules:
  - apiGroups: ['']
    apiVersions: ['v1', 'v1beta1']
    resources:
    - pods
    - configmaps
    operations:
      - 'CREATE'
      - 'UPDATE'
  - apiGroups: ['apps']
    apiVersions: ['v1', 'v1beta1']
    resources:
    - deployments
    - daemonsets
    - replicaset
    - statefulset
    operations:
      - 'CREATE'
      - 'UPDATE'
  - apiGroups: ['apps.openshift.io']
    apiVersions: ['v1']
    resources:
    - deploymentconfigs
    operations:
      - 'CREATE'
      - 'UPDATE'
  clientConfig:
    service:
      namespace: {{ .Release.Namespace }}
      name: {{ .Release.Name }}
      port: {{ .Values.webhook.service.port }}
      path: /mutate
{{- if not .Values.openshift.enabled }}
    caBundle: {{ default "" ( $ca.Cert | b64enc ) }}
{{- end }}
  admissionReviewVersions: {{ include "admission-controller-api-versions" . | indent 4}}
{{- if (semverCompare ">=1.12-0" .Capabilities.KubeVersion.GitVersion) }}
  # Only include 'sideEffects' field in Kubernetes 1.12+
  sideEffects: NoneOnDryRun
{{- end }}
  timeoutSeconds: 5
  namespaceSelector:
    matchExpressions:
      - key: "kubernetes.io/metadata.name"
        operator: NotIn
        values: {{ (append .Values.autotrace.exclude.selector .Release.Namespace) | toYaml | nindent 10 }}