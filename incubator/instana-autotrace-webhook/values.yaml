# Default values for instana-autotrace-webhook.

rbac:
  enabled: true # Setting openshift.enabled=true implies rbac.enabled=true
  psp: # Ignored unless rbac.enabled == true
    enabled: true
    # The name of an existing PodSecurityPolicy you would like to authorize for the Instana Agent pods.
    # If not set and `enable` is true, a PodSecurityPolicy will be created with a name generated using the fullname template.
    name: null
openshift:
  enabled: false # Deploying on OpenShift implies rbac.enabled=true
webhook:
  remoteDebug: false
  debug: false
  ssl:
    insecure: false
    caBundle:
  image: containers.instana.io/instana/release/agent/instana-autotrace-webhook@sha256:e7eea8d1275c02217ac5bfb87ec7b5850c648e9848db4e58a473a3ae87c615eb
  imagePullPolicy: IfNotPresent
  imagePullSecrets:
    - name: containers-instana-io
  imagePullCredentials:
    registry: containers.instana.io
    username: _
    password:
  deployment:
    additionalAnnotations: {}
    additionalLabels: {}
    replicas: 1
  service:
    additionalAnnotations: {}
    additionalLabels: {}
    port: 42650
  pod:
    additionalAnnotations: {}
    additionalLabels: {}
    affinity: {}
    tolerations: []
    port: 42650
    # This security context is carried verbatim to the security context of the webhook pod
    securityContext:
    ### Better not to specify CPU resource limits: the WebHook, being a Spring-based app,
    ### needs a burst of CPU on startup, but then is very, very efficient. For more info,
    ### refer to https://kubernetes.io/docs/tasks/configure-pod-container/quality-service-pod/#create-a-pod-that-gets-assigned-a-qos-class-of-burstable
    resources:
      requests:
        memory: "512Mi"
        #    cpu: 0.5
      limits:
        memory: "1Gi"
        #    cpu: 1.0
autotrace:
  # By default the instana-autotrace-webhook will instrument all pods that are not
  # labelled with `instana-autotrace=false`. If this switch is flipped on,
  # the instana-autotrace-webhook will only touch the pods that have the
  # `instana-autotrace=true` label.
  opt_in: false
  failurePolicy: Ignore # We do not want to cause any trouble in scheduling; for local testing, use 'Fail'
  instrumentation:
    image: icr.io/instana/instrumentation@sha256:d47e81b641fedd500549502db239e1bed126c485e368fd121a81ce9802dc4d8a
    imagePullPolicy: IfNotPresent
    # This security context is carried verbatim to the security context of all instrumentation init containers
    securityContext:
      runAsNonRoot: true
      privileged: false
      allowPrivilegeEscalation: false
      capabilities:
        drop:
          - all
  ingress_nginx:
    enabled: false
    status_enabled: false
    status_allow: all
  nodejs:
    enabled: true
    esm: false
  netcore:
    enabled: true
  ruby:
    enabled: true
  python:
    enabled: true
  ace:
    enabled: false
  ibmmq:
    enabled: false
  libinstana_init:
    enabled: true
  initContainer:
    memoryLimit: 64Mi
    cpuLimit: 250m
  # Namespaces that are always ignored, no matter what
  exclude:
    builtin_namespaces:
      - kube-* # kube-node-lease, kube-public, kube-system
      - instana-* # Avoid conflicts with the Instana Agent and other Instana-related deployments
      - openshift-* # Guess what, Openshift!
      - pks-system # TKGI, formerly known as PKS
    namespaces: []
    # Ignore namespaces via configuration of the MutatingWebhookConfiguration, k8s will not send requests for these namespaces to the webhook, wildcards are not supported here
    selector:
      - pks-system
      - kube-system
      - kube-public
      - kube-node-lease
      - openshift-apiserver
      - openshift-apiserver-operator
      - openshift-authentication
      - openshift-authentication-operator
      - openshift-cloud-controller-manager
      - openshift-cloud-controller-manager-operator
      - openshift-cloud-credential-operator
      - openshift-cloud-network-config-controller
      - openshift-cluster-csi-drivers
      - openshift-cluster-machine-approver
      - openshift-cluster-node-tuning-operator
      - openshift-cluster-samples-operator
      - openshift-cluster-storage-operator
      - openshift-cluster-version
      - openshift-config
      - openshift-config-managed
      - openshift-config-operator
      - openshift-console
      - openshift-console-operator
      - openshift-console-user-settings
      - openshift-controller-manager
      - openshift-controller-manager-operator
      - openshift-distributed-tracing
      - openshift-dns
      - openshift-dns-operator
      - openshift-etcd
      - openshift-etcd-operator
      - openshift-host-network
      - openshift-image-registry
      - openshift-infra
      - openshift-ingress
      - openshift-ingress-canary
      - openshift-ingress-operator
      - openshift-insights
      - openshift-kni-infra
      - openshift-kube-apiserver
      - openshift-kube-apiserver-operator
      - openshift-kube-controller-manager
      - openshift-kube-controller-manager-operator
      - openshift-kube-scheduler
      - openshift-kube-scheduler-operator
      - openshift-kube-storage-version-migrator
      - openshift-kube-storage-version-migrator-operator
      - openshift-machine-api
      - openshift-machine-config-operator
      - openshift-marketplace
      - openshift-monitoring
      - openshift-multus
      - openshift-network-diagnostics
      - openshift-network-operator
      - openshift-node
      - openshift-nutanix-infra
      - openshift-oauth-apiserver
      - openshift-openstack-infra
      - openshift-operator-lifecycle-manager
      - openshift-operators
      - openshift-operators-redhat
      - openshift-ovirt-infra
      - openshift-route-controller-manager
      - openshift-sdn
      - openshift-service-ca
      - openshift-service-ca-operator
      - openshift-user-workload-monitoring
      - openshift-vsphere-infra
